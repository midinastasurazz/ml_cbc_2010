function confMatrix = nFold(examples, targets, n)

N = length(examples);
foldsize = N/n;

emotion_targets = cell(1, 6);
newemotion_targets = cell(1,6);
attribs = 1:45;

confMatrix = zeros(6);

for i = 1:6
    emotion_targets{i} = remap_emotion(targets, i);
end

trees = cell(1, 6);

for count = 0:foldsize-1

test = examples(count*n+1:(count+1)*n,:);
training = [examples(1:count*n,:) ; examples((count+1)*n+1:N,:)];
newTargets = targets(count*n+1:(count+1)*n);

	for i = 1:6
		newemotion_targets{i} = [emotion_targets{i}(1:count*n) ; emotion_targets{i}((count+1)*n+1:N)];
	    trees{i} = decision_tree_learning(training, ...
		attribs, newemotion_targets{i});
	%DrawDecisionTree(trees{i},emolab2str(i))
	end

	class = testTrees(trees,test);
    
    newClass = clarify(class,trees,test);
	
    %dif = class - newClass
    
	confMatrix = confMatrix + confusion_matrix(newClass,newTargets);

end

end
